global !p
import px.snippets
endglobal

snippet pr "print debug" bw
`!p
prefix = t[1] + ": %q\\n' "
prefix = "{}:{}: {}".format(
    os.path.basename(px.buffer.get().name),
    str(px.cursor.get()[0]),
    prefix
)
`printf 'XXXXXX `!p snip.rv=prefix`$1 >&2
endsnippet

post_jump "px.snippets.expand(snip)"
snippet prd "Description" b
pr$1 >>${2:/tmp/debug}
endsnippet

snippet in "if string empty" b
if [ -n "$$1" ]; then
	${2:${VISUAL}}
fi
endsnippet

snippet a "alias" b
alias $1='$2'
endsnippet

snippet i "if [" b
if [ $1 ]; then
	${2:${VISUAL}}
fi
endsnippet

snippet o "if [" b
if $1; then
	${2:${VISUAL}}
fi
endsnippet

snippet f "function" b
function $1() {
	$2
}
endsnippet

snippet "([:n])" "function" rw
`!p
if match.group(1) == ":":
    snip.rv = ":"
`$1() {
	$2
}
endsnippet

context "px.snippets.make_context(snip)"
post_jump "px.snippets.make_jumper(snip)"
snippet l "local" be
`!p
if px.snippets.get_jumper_position(snip) == 1:
	if re.search(r' $', t[1]):
		t[1] = t[1][:-1] + "="
		px.snippets.advance_jumper(snip)
		print(1)
	if re.search(r'[^=][$]$', t[1]):
		t[1] = t[1][:-1] + "=$"
		px.snippets.advance_jumper(snip)
		print(2)
`local $1$2
endsnippet

priority -1
context "snip.visual_text and not snip.visual_text.strip().startswith('set -x')"
snippet "" "wrap in set -x" re
set -x
${VISUAL}
set +x
endsnippet

context "snip.visual_text.strip().startswith('set -x')"
snippet "" "wrap in set -x" re
${VISUAL/\n\s+set \+x|set -x\n\s+//g}
endsnippet

snippet c "" w
case "$1" in
	$2)
		$3
		;;$4
esac
endsnippet
snippet "    ;;" "" wr
    ;;

$1)
	$2
	;;
endsnippet
